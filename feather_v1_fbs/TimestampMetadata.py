# automatically generated by the FlatBuffers compiler, do not modify

# namespace: feather_v1_fbs

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class TimestampMetadata(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TimestampMetadata()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTimestampMetadata(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TimestampMetadata
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # TimestampMetadata
    def Unit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # Timestamp data is assumed to be UTC, but the time zone is stored here for
    # presentation as localized
    # TimestampMetadata
    def Timezone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Start(builder): builder.StartObject(2)
def TimestampMetadataStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddUnit(builder, unit): builder.PrependInt8Slot(0, unit, 0)
def TimestampMetadataAddUnit(builder, unit):
    """This method is deprecated. Please switch to AddUnit."""
    return AddUnit(builder, unit)
def AddTimezone(builder, timezone): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(timezone), 0)
def TimestampMetadataAddTimezone(builder, timezone):
    """This method is deprecated. Please switch to AddTimezone."""
    return AddTimezone(builder, timezone)
def End(builder): return builder.EndObject()
def TimestampMetadataEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)